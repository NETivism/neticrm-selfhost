server {
    listen 80;
    server_name _;
    root /var/www/html;
    # scope server

    location ^~ /.well-known/ {
    }

    # only ^~ or = match place here to make sure priority first
    # block all access of log files
    location ^~ /log/ {
        return 404;
    }

    # Support for favicon. Return an 1x1 transparent GIF if it doesn't
    location = /favicon.ico {
        expires 30d;
        try_files /favicon.ico @empty;
    }
    # Return an in memory 1x1 transparent GIF.
    location @empty {
        expires 30d;
        empty_gif;
    }

    # security concern when not use fpm
    location ~ /\. {
        return 404;
    }
    location ~* ^(.*)(?:.+\.(?:inc|sh|sql|mysql|sql\.gz|tpl\.php|tpl|patch))$ {
        return 404;
    }
    location ~ composer\.(json|lock)$ {
        return 404;
    }

    # static to dynamic routing for drupal
    location ^~ /rss.xml {
        try_files $uri @backend;
    }

    location ^~ /sitemap.xml {
        try_files $uri @backend;
    }

    location / {
    # allowed
    # index.php
    # module statistics for d7
    # civicrm external open click detect php
    location ~ (^/index.php|modules/statistics/statistics\.php|civicrm/extern/.+\.php)$ {
        try_files $uri @backend;
    }

    # deny access to drupal files
    location ~ (INSTALL\.txt|INSTALL\.*\.txt|CHANGELOG\.txt|phpmyadmin|UPGRADE\.txt|README\.txt|MAINTAINERS\.txt|COPYRIGHT\.txt|install\.php|update\.php|cron\.php) {
        return 404;
    }

    # deny access core file
    location = /core {
        return 404;
    }

    # deny for private
    location ~* /files/private/ {
        internal;
    }
    location ~* sites/[^/]+/private/ {
        internal;
    }

    # deny for tmp
    location ~* /files/tmp/ {
        internal;
    }
    location ~* sites/[^/]+/tmp/ {
        internal;
    }

    # allow private file only from drupal path
    location ^~ /system/files/ {
        try_files $uri @backend;
        log_not_found off;
    }

    ## If accessing an image generated by Drupal 7 image style , serve it
    ## directly if available, if not relay the request to Drupal to (re)generate
    ## the image.
    location ~* ^/(([^/]+/)?sites/[^/]+/files/?.*?(styles|imagecache|css|js)/.*$) {
        access_log off;
        set $drupal_args $1;
        expires 30d;
        try_files $uri @backend;
    }

    # image
    location ~* ^.+\.(?:css|cur|js|jpe?g|gif|webp|htc|ico|png|html|xml|woff|woff2|ttf|swf|svg)$ {
        access_log off;
        expires 30d;
        ## No need to bleed constant updates. Send the all shebang in one
        ## fell swoop.
        tcp_nodelay off;
        ## Set the OS file cache.
        open_file_cache max=3000 inactive=120s;
        open_file_cache_valid 45s;
        open_file_cache_min_uses 2;
        open_file_cache_errors off;
        ## ETag support. This requires an Nginx version >= 1.3.3.
        etag on;
    }

    # secure all other drupal directory
    location ~* ^/(themes(/.*)?|modules(/.*)?|includes(/.*)?|sites|sites/[^/]*/.+\.php|sites/all/(modules|themes)(/[^/]*)?(/[^/]*)?|sites/(.*)/(modules|themes)(/[^/]*)?(/[^/]*)?)/?$ {
        return 404;
    }

    ## Replicate the Apache <FilesMatch> directive of Drupal standard
    ## .htaccess. Disable access to any code files. Return a 404 to curtail
    ## information disclosure. Hide also the text files.
    # deny hidden files
    location ~ /\. {
        return 404;
    }
    # deny specific extensions
    location ~* \.(?:htaccess|make|engine|inc|info|install|make|module|profile|po|sh|config|.*sql|sql\.gz|bak|test|theme|twig|tpl(?:\.php)?|xtmpl|yml|yaml|patch|php|md)(~|\.sw[op]|\.bak|\.orig|\.save)?$ {
        return 404;
    }
    # deny specific files
    location ~ (?:.+\.env|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template|composer\.(json|lock)|web\.config|yarn\.lock|package\.json)$ {
        return 404;
    }
    # deny special develop related files
    location ~* ^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
        return 404;
    }

    # allow for custom
    location ~* /files/civicrm/(custom|persist)/ {
        allow all;
        try_files $uri 404;
    }

    # deny for civicrm
    location ~* /files/civicrm/ {
        return 404;
    }

    # refs #32399, workaround for deny pdf / csv in root dir
    location ~* ^/[^/]*\.(pdf|csv)$ {
        return 404;
    }

    # allow for other files
    # this should put at the end of other files rules
    location ~* /sites/.+/files/ {
        try_files $uri 404;
    }

    # with boost
    try_files $uri /$uri @cache;

    # without boost
    # try_files $uri /$uri @backend;
    }

    location @cache {
        if ( $request_method !~ GET ) {
            return 405;
        }
        if ($http_cookie ~ "DRUPAL_UID") {
            return 405;
        }
        error_page 405 = @backend;

        add_header    Cache-Control  private;
        add_header X-Header "Boost";
        try_files /cache/normal/$host${uri}_$args.html @backend;
    }

    location @backend {
        fastcgi_pass   neticrm-php:8001;

        fastcgi_index index.php;

        fastcgi_param	QUERY_STRING		$query_string;
        fastcgi_param	REQUEST_METHOD		$request_method;
        fastcgi_param	CONTENT_TYPE		$content_type;
        fastcgi_param	CONTENT_LENGTH		$content_length;

        fastcgi_param SCRIPT_FILENAME /var/www/html$uri;
        fastcgi_param SCRIPT_NAME $uri;
        fastcgi_param	REQUEST_URI		$request_uri;
        fastcgi_param	DOCUMENT_URI		$document_uri;
        fastcgi_param DOCUMENT_ROOT /var/www/html;
        fastcgi_param	SERVER_PROTOCOL		$server_protocol;

        fastcgi_param	GATEWAY_INTERFACE	CGI/1.1;
        fastcgi_param	SERVER_SOFTWARE		nginx/$nginx_version;

        fastcgi_param	REMOTE_ADDR		$remote_addr;
        fastcgi_param	REMOTE_PORT		$remote_port;
        fastcgi_param	SERVER_ADDR		$server_addr;
        fastcgi_param	SERVER_PORT		$server_port;
        fastcgi_param	SERVER_NAME		$server_name;

        fastcgi_param	HTTPS			$https if_not_empty;

        # PHP only, required if PHP was built with --enable-force-cgi-redirect
        fastcgi_param	REDIRECT_STATUS		200;

        # timeout handling increase to 2 hour
        fastcgi_read_timeout 7200;

        # security setting
        fastcgi_hide_header X-Powered-By;
        fastcgi_hide_header X-Generator;
        fastcgi_hide_header Server;
        
        fastcgi_param  SCRIPT_FILENAME /var/www/html/index.php;
        fastcgi_param  SCRIPT_NAME /index.php;
        fastcgi_param  QUERY_STRING q=$drupal_args&$query_string;
    }

}
